openapi: 3.0.3
info:
  title: Personalized Learning Trajectory Platform API
  description: >
    API for an online platform enabling tutors to manage students manually or via automated interest data collection,
    generating personalized assignments, lesson plans, progress reports, and adaptive learning trajectories using AI.
  version: 1.0.0
servers:
  - url: https://api.my-personal-learning-platform.com/v1
    description: Production server

tags:
  - name: Auth
    description: User registration and authentication
  - name: Students
    description: Manage student profiles and interests
  - name: Courses
    description: Manage courses and lessons
  - name: Assignments
    description: Generate and manage personalized assignments and lesson plans
  - name: Progress
    description: Student progress reports and testing
  - name: Tutors
    description: Tutor-specific actions and data

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - role
                - password
                - confirmPassword
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [Student, Tutor]
                  description: User role: Student or Tutor
                password:
                  type: string
                  format: password
                confirmPassword:
                  type: string
                  format: password
      responses:
        '201':
          description: User registered successfully, confirmation email sent.
        '400':
          description: Invalid input data.
        '409':
          description: User with this email already exists.
        '500':
          description: Server error.

  /auth/confirm:
    get:
      tags:
        - Auth
      summary: Confirm user email via token
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: Email confirmation token
      responses:
        '200':
          description: Email confirmed successfully.
        '400':
          description: Invalid or expired token.
        '404':
          description: User not found.

  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful, returns auth token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid input data.
        '401':
          description: Invalid credentials.
        '500':
          description: Server error.

  /students/{studentId}:
    get:
      tags:
        - Students
      summary: Get student profile by ID
      parameters:
        - $ref: '#/components/parameters/StudentId'
      responses:
        '200':
          description: Student profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    put:
      tags:
        - Students
      summary: Update student profile
      parameters:
        - $ref: '#/components/parameters/StudentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
      responses:
        '200':
          description: Student profile updated
        '400':
          description: Invalid data
        '404':
          description: Student not found

  /students/{studentId}/interests:
    get:
      tags:
        - Students
      summary: Get interests for a student
      parameters:
        - $ref: '#/components/parameters/StudentId'
      responses:
        '200':
          description: Student interests
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Student not found
    put:
      tags:
        - Students
      summary: Update student interests
      parameters:
        - $ref: '#/components/parameters/StudentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Interests updated successfully
        '400':
          description: Invalid data
        '404':
          description: Student not found

  /courses:
    post:
      tags:
        - Courses
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCreate'
      responses:
        '201':
          description: Course created
        '400':
          description: Invalid data
        '500':
          description: Server error
    get:
      tags:
        - Courses
      summary: List all courses for the tutor
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseSummary'

  /courses/{courseId}:
    get:
      tags:
        - Courses
      summary: Get course details including lessons
      parameters:
        - $ref: '#/components/parameters/CourseId'
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
        '404':
          description: Course not found

  /courses/{courseId}/students:
    post:
      tags:
        - Courses
      summary: Add student to course by email (invite)
      parameters:
        - $ref: '#/components/parameters/CourseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Invitation sent to student
        '400':
          description: Invalid email
        '404':
          description: Course or student not found
        '409':
          description: Student already enrolled

  /learning-trajectory/generate:
    post:
      tags:
        - Tutors
      summary: Generate personalized learning trajectory for a student in a course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tutorId
                - studentId
                - courseId
              properties:
                tutorId:
                  type: string
                studentId:
                  type: string
                courseId:
                  type: string
                notes:
                  type: string
                  description: Optional additional notes from tutor
      responses:
        '200':
          description: Generated personalized learning trajectory graph
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningTrajectory'
        '400':
          description: Invalid input
        '500':
          description: Generation failed or model error

  /lesson-plan/generate:
    post:
      tags:
        - Tutors
      summary: Generate personalized lesson plan for a student, course, and lesson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tutorId
                - studentId
                - courseId
                - lessonId
              properties:
                tutorId:
                  type: string
                studentId:
                  type: string
                courseId:
                  type: string
                lessonId:
                  type: string
                notes:
                  type: string
                  description: Optional additional notes from tutor
      responses:
        '200':
          description: Generated personalized lesson plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonPlan'
        '400':
          description: Invalid input
        '500':
          description: Generation failed or model error

  /progress/{studentId}:
    get:
      tags:
        - Progress
      summary: Get progress report for a student
      parameters:
        - $ref: '#/components/parameters/StudentId'
        - in: query
          name: courseId
          schema:
            type: string
          required: true
          description: ID of the course
        - in: query
          name: reportType
          schema:
            type: string
            enum: [topic-graph, knowledge-gaps]
          required: true
          description: Format of the report
      responses:
        '200':
          description: Progress report data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressReport'
        '404':
          description: Student or course not found
        '500':
          description: Server error

  /test/submit:
    post:
      tags:
        - Progress
      summary: Submit test answers for a student lesson test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - studentId
                - courseId
                - lessonId
                - answers
              properties:
                studentId:
                  type: string
                courseId:
                  type: string
                lessonId:
                  type: string
                answers:
                  type: array
                  items:
                    type: object
                    description: Answer to a question
      responses:
        '200':
          description: Test results returned and saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '400':
          description: Invalid input data
        '500':
          description: Server error

  /lesson/{lessonId}/evaluate:
    post:
      tags:
        - Tutors
      summary: Submit tutor's evaluation and notes after a lesson
      parameters:
        - $ref: '#/components/parameters/LessonId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tutorId
                - studentId
                - courseId
                - notes
                - knowledgeRating
                - repeatRequired
              properties:
                tutorId:
                  type: string
                studentId:
                  type: string
                courseId:
                  type: string
                notes:
                  type: string
                knowledgeRating:
                  type: integer
                  minimum: 1
                  maximum: 5
                repeatRequired:
                  type: boolean
      responses:
        '200':
          description: Evaluation saved successfully
        '400':
          description: Invalid data
        '500':
          description: Server error

components:
  parameters:
    StudentId:
      name: studentId
      in: path
      required: true
      schema:
        type: string
      description: Student unique identifier
    CourseId:
      name: courseId
      in: path
      required: true
      schema:
        type: string
      description: Course unique identifier
    LessonId:
      name: lessonId
      in: path
      required: true
      schema:
        type: string
      description: Lesson unique identifier

  schemas:
    Student:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        contactInfo:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
        interests:
          type: array
          items:
            type: string
        learningGaps:
          type: array
          items:
            type: string
        notes:
          type: string
    StudentUpdate:
      type: object
      properties:
        fullName:
          type: string
        contactInfo:
          type: object
          properties:
            email:
              type: string
              format: email
            phone:
              type: string
        interests:
          type: array
          items:
            type: string

    CourseCreate:
      type: object
      required: [title, topics]
      properties:
        title:
          type: string
        topics:
          type: array
          items:
            type: string
        materials:
          type: array
          items:
            type: string
            description: URLs or file IDs of study materials

    CourseSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string

    CourseDetail:
      allOf:
        - $ref: '#/components/schemas/CourseSummary'
        - type: object
          properties:
            topics:
              type: array
              items:
                type: string
            materials:
              type: array
              items:
                type: string

    LearningTrajectory:
      type: object
      properties:
        studentId:
          type: string
        courseId:
          type: string
        graphData:
          type: object
          description: >
            Data representing the personalized course graph structure, nodes, and edges for visualization

    LessonPlan:
      type: object
      properties:
        studentId:
          type: string
        courseId:
          type: string
        lessonId:
          type: string
        planContent:
          type: string
          description: Generated personalized lesson plan text or markup

    ProgressReport:
      type: object
      properties:
        studentId:
          type: string
        courseId:
          type: string
        reportType:
          type: string
        data:
          type: object
          description: Report content varies depending on reportType

    TestResult:
      type: object
      properties:
        studentId:
          type: string
        courseId:
          type: string
        lessonId:
          type: string
        score:
          type: number
          format: float
        passed:
          type: boolean
        details:
          type: object

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
